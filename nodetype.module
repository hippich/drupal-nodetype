<?php


/**
 * Implementation of hook_permission().
 */
function nodetype_permission() {
  return array(
    'change node types' => array(
      'title'       => t('Change node type'),
      'description' => t("Allow to change node type. Only use it when you know *exactly* what you're doing."),
    ),
  );
}

/**
 * Implementation of hook_node_presave().
 */
function nodetype_node_presave($node) { 
  if (isset($node->nodetype) && $node->nodetype) {
    $types = node_type_get_types();
    drupal_set_message(
      t('The type of the post %title has been changed from %old to %new.', array(
        '%title' => $node->title, 
        '%old'   => $types[$node->type]->name, 
        '%new'   => $types[$node->nodetype]->name
      ))
    );
    $node->type = $node->nodetype;
  }
}

/**
 * Implementation of hook_form_alter().
 */
function nodetype_form_alter(&$form, $form_state, $form_id) {
  if (isset($form['type']) && $form['type']['#value'] .'_node_form' == $form_id && isset($form['#node']->nid) && user_access('change node types')) {
    $types = node_type_get_types();

    foreach ($types as $type => $info) {
      if ($form['type']['#value'] == $type) {
        $current_type = $types[$type];
        unset($types[$type]);
      }
      else {
        $types[$type] = $info->name;
      }
    }

    $form['nodetype'] = array(
      '#type' => 'select',
      '#title' => t('Content type'),
      '#description' => t('Select a new content type that this post will be changed to. Only continue if you know what you are doing. <strong>This does not migrate data from CCK fields!</strong>'),
      '#options' => array(0 => '<'. t('leave as is: @type', array('@type' => $current_type->name)) .'>') + $types,
      '#default_value' => isset($form_state['values']['nodetype']) ? $form_state['values']['nodetype'] : 0,
      '#weight' => 10,
    );
  }
}
